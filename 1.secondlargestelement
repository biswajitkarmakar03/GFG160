/* SECOND LARGEST ELEMENT */

Given an array of positive integers arr[], return the second largest element from the array. If the second largest element doesn't exist then return -1.

Note: The second largest element should not be equal to the largest element.

Examples:

Input: arr[] = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr[] = [10, 5, 10]
Output: 5
Explanation: The largest element of the array is 10 and the second largest element is 5.
Input: arr[] = [10, 10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist.




class Solution {
    public static int getSecondLargest(int[] arr) {
        
        if(arr.length < 2){
            return -1;
        }
        
        int largest = Integer.MIN_VALUE;
        int secondLargest = Integer.MIN_VALUE;
        
        for(int num : arr){
            if(num > largest){
                secondLargest = largest;
                largest = num;
            }
            else if(num > secondLargest && num != largest){
                secondLargest = num;
            }
        }    
        
        return secondLargest == Integer.MIN_VALUE ? -1 : secondLargest;

    }
    
    public static void main(String[] args){
        int[] arr1 = { 12, 35, 1, 10, 34, 1 };
        int[] arr2 = { 10, 5, 10 };
        int[] arr3 = { 10, 10, 10 };
        
        System.out.println(getSecondLargest(arr1));
        System.out.println(getSecondLargest(arr2));
        System.out.println(getSecondLargest(arr3));
    }
    
}
